{"version":3,"sources":["../../src/controller/foodtruck.js"],"names":["config","db","api","post","req","res","newFoodTruck","name","body","foodtype","avgcost","geometry","coordinates","lat","long","save","err","send","json","message","get","find","foodtrucks","findById","params","id","foodtruck","put","console","log","delete","status","remove","_id","review","newReview","title","text","reviews","push"],"mappings":"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","file":"foodtruck.js","sourcesContent":["import mongoose from \"mongoose\";\nimport { Router } from \"express\";\nimport foodtruck from \"../model/foodtruck\";\nimport Review from \"../model/review\";\n\nimport { authenticate } from \"../middleware/authMiddleware\";\n\nexport default({ config, db}) => {\n  let api = Router();\n\n  //CRUD - Create Read Update Delete\n\n\n  // \"/v1/foodtruck/add\" - Create\n  api.post(\"/add\", authenticate, (req, res) => {\n    let newFoodTruck = new foodtruck();\n    newFoodTruck.name = req.body.name;\n    newFoodTruck.foodtype = req.body.foodtype;\n    newFoodTruck.avgcost = req.body.avgcost;\n    newFoodTruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n    foodtruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n    newFoodTruck.save(err => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({message: \"foodtruck saved successfully.\"});\n    });\n  });\n\n  // \"/v1/foodtruck\" - Read\n  api.get(\"/\", (req, res) =>  {\n    foodtruck.find({}, (err, foodtrucks) => {\n      if (err){\n        res.send(err);\n      }\n      res.json(foodtrucks);\n    });\n  });\n  // \"/v1/foodtruck/:id\" - Read 1\n  api.get(\"/:id\", (req, res) => {\n    foodtruck.findById(req.params.id, (err, foodtruck) => {\n      if (err){\n        res.send(err);\n      }\n      res.json(foodtruck);\n    });\n  });\n\n  //\"/v1/foodtruck/:id\" - Update\n  api.put(\"/:id\", authenticate, (req, res) => {\n    foodtruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n\n      if(req.body.name) {\n        foodtruck.name = req.body.name;\n        console.log(\"Name updated\");\n      }\n      if (req.body.foodtype){\n        foodtruck.foodtype = req.body.foodtype;\n        console.log(\"Foodtype updated\");\n      }\n      if (req.body.avgcost){\n        foodtruck.avgcost = req.body.avgcost;\n        console.log(\"Avgcost updated\");\n      }\n      if (req.body.geometry) {\n        foodtruck.geometry.coordinates.lat = req.body.geometry.coordinates.lat;\n        foodtruck.geometry.coordinates.long = req.body.geometry.coordinates.long;\n        console.log(\"Coordinates updated\");\n      }\n      // if (req.body.geometry.coordinates){\n      //   foodtruck.geometry.coordinates = req.body.geometry.coordinates;\n      // }\n\n      foodtruck.save(err => {\n        if (err) {\n          res.send(err);\n        }\n        res.json({message: \"foodtruck info updated.\"});\n      });\n    });\n  });\n\n  //\"/v1/foodtruck/:id\" - Delete\n  api.delete(\"/:id\", authenticate, (req, res) => {\n    foodtruck.findById(req.params.id, (err, foodtruck) => {\n      if(err){\n        res.status(500).send(err);\n        return;\n      }\n      if(foodtruck === null) {\n        res.status(404).send(\"FoodTruck not found!\");\n        return;\n      }\n      foodtruck.remove({\n        _id: req.params.id\n      }, (err, foodtruck) => {\n        if (err) {\n          res.status(500).send(err);\n          return;\n        }\n        Review.remove({\n          foodtruck: req.params.id\n        }, (err, review) => {\n          if(err){\n            res.send(err);\n          }\n          res.json({message: \"foodtruck DELTED!\"});\n        });\n      });\n    });\n  });\n\n\n  //add review for a specific foodtruck id\n  //\"/v1/foodtruck/reviews/add/:id\"\n  api.post(\"/reviews/add/:id\", authenticate, (req, res) => {\n    foodtruck.findById(req.params.id, (err, foodtruck) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.foodtruck = foodtruck._id;\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        foodtruck.reviews.push(newReview._id);\n        foodtruck.save(err => {\n          if (err) {\n            res.send(err);\n          }\n          res.json({ message: \"Food truck review succesfully saved.\"});\n        });\n      });\n    });\n  });\n\n  //get foodtrucks for a specific foodtype\n  //\"/v1/foodtruck/foodtype/:foodtype\"\n  api.get(\"/foodtype/:foodtype\", (req, res) => {\n    foodtruck.find({foodtype: req.params.foodtype}, (err, foodtruck) => {\n      if (err){\n        res.send(err);\n      }\n      res.json(foodtruck)\n    });\n  });\n\n  //get reviews for a specific food truck\n  //\"/v1/foodtruck/reviews/:id\"\n  api.get(\"/reviews/:id\", (req, res) => {\n    Review.find({foodtruck: req.params.id}, (err, reviews) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(reviews);\n    });\n  });\n\n\n  return api;\n\n\n\n\n\n\n}\n"]}